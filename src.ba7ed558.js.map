{"version":3,"sources":["index.js"],"names":["refs","daysSpan","document","querySelector","hoursSpan","minsSpan","secsSpan","CountdownTimer","constructor","selector","targetDate","setInterval","startTime","Date","now","deltaTime","updateClock","elem","time","pad","days","Math","floor","hours","mins","secs","textContent","value","String","padStart","Object","values"],"mappings":";;;AAuCA,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAvCA,QAAA,oBAEA,MAAMA,EAAO,CACXC,SAAUC,SAASC,cAAc,2BACjCC,UAAWF,SAASC,cAAc,4BAClCE,SAAUH,SAASC,cAAc,2BACjCG,SAAUJ,SAASC,cAAc,4BAGnC,MAAMI,EACJC,YAAYC,EAAUC,GAIPC,EAAAA,KAAAA,aAAAA,YAAY,KACnBC,MAAAA,EAAYC,KAAKC,MACnBC,IAAAA,EAAY,KAAKL,WAAaE,EAC7BI,KAAAA,YAAYD,IACdf,EAAKM,WAPHW,KAAAA,KAAOf,SAASC,cAAcM,GAC9BC,KAAAA,WAAaA,EAQpBM,YAAYE,GACJC,MAAAA,EAAM,KAAKA,IAEXC,EAAOD,EAAIE,KAAKC,MAAMJ,EAAQ,QAC9BK,EAAQJ,EAAIE,KAAKC,MAAOJ,EAAQ,MAAyB,OACzDM,EAAOL,EAAIE,KAAKC,MAAOJ,EAAQ,KAAoB,MACnDO,EAAON,EAAIE,KAAKC,MAAOJ,EAAQ,IAAc,MAEjDlB,EAAKC,SAASyB,eAAiBN,IAC/BpB,EAAKI,UAAUsB,eAAiBH,IAChCvB,EAAKK,SAASqB,eAAiBF,IAC/BxB,EAAKM,SAASoB,eAAiBD,IAGnCN,IAAIQ,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAIrC,IAAItB,KAAkBuB,OAAOC,OAAO,CAClCtB,SAAU,WACVC,WAAY,IAAIG,KAAK","file":"src.ba7ed558.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n  daysSpan: document.querySelector(\"span[data-value='days']\"),\n  hoursSpan: document.querySelector(\"span[data-value='hours']\"),\n  minsSpan: document.querySelector(\"span[data-value='mins']\"),\n  secsSpan: document.querySelector(\"span[data-value='secs']\"),\n};\n\nclass CountdownTimer {\n  constructor(selector, targetDate) {\n    this.elem = document.querySelector(selector);\n    this.targetDate = targetDate;\n  }\n    intervalId = setInterval(() => {\n    const startTime = Date.now();\n    let deltaTime = this.targetDate - startTime;\n    this.updateClock(deltaTime);\n    }, refs.secsSpan);\n    \n  updateClock(time) {\n    const pad = this.pad;\n    \n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n      refs.daysSpan.textContent = `${days}`;\n      refs.hoursSpan.textContent = `${hours}`;\n      refs.minsSpan.textContent = `${mins}`;\n      refs.secsSpan.textContent = `${secs}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  } \n}\n\nnew CountdownTimer(...Object.values({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jul 21, 2021\"),\n}));"]}